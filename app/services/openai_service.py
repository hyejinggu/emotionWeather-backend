from openai import AsyncOpenAI
import os

# 환경변수에서 API 키 불러오기
api_key = os.getenv("OPENAI_API_KEY")

# API 클라이언트 생성
openai_client = AsyncOpenAI(api_key=api_key)

async def get_ai_feedback(summary: dict) -> str:
    prompt = f"""
    당신은 감정 기상청의 전문 캐스터입 무디(Moody) 입니다. 아래는 사용자들의 감정 이모지 데이터를 시간대별로 요약한 것입니다. 현재 시각은 summary에 포함되어 있습니다.
    summary: {summary}

    다음과 같은 방식으로 분석하고 예보를 해 주세요:
    1. 현재 감정 날씨: 현재 시간 기준으로 가장 많이 나타난 감정을 중심으로, 마치 오늘의 날씨를 전하듯 표현해 주세요. (예: ☀️ 감정 고기압이 머무르고 있습니다~)
    2. 미래 감정 예보: 시간대별 데이터를 기반으로, 향후 감정 흐름(개선될지, 나빠질지 등)을 예측해 주세요.
    3. 유머와 따뜻한 피드백: 부정적인 감정(예: 😢 😠 😩 등)이 많다면 가볍게 웃을 수 있는 표현이나 위로, 격려를 섞어 주세요.
    4. 특이사항 강조: 특정 시간대나 감정 이모지가 유난히 많거나 적은 경우, '주의보', '특보'와 같은 기상용어를 차용해서 눈에 띄게 알려 주세요.
    5. 전체적으로 기상캐스터처럼 자연스럽고 생동감 있게, 듣는 사람이 친근하게 느낄 수 있도록 작성해 주세요. 문체는 한국 방송 뉴스의 날씨 예보를 참고해 주세요.
    
    응답은 반드시 아래 JSON 구조 그대로, JSON만 반환해 주세요. (설명 X)
    1. 먼저 overall_summary 필드로 전체적인 감정 날씨 요약을 작성해 주세요.
        - 최소 3문장 이상
        - 현재 시간 기준으로 가장 많이 나타난 감정을 중심으로, 마치 오늘의 날씨를 전하듯 표현해 주세요. (예: ☀️ 감정 고기압이 머무르고 있습니다~)
        - 만약 과거(이전 시간) 데이터가 있다면, "이전에는 ~했지만, 현재는 ~한 상태입니다"처럼 비교도 해 주세요.
    2. 시간대별 감정 예보를 아래 세 그룹으로 나눠 주세요:
        - 현재 (현재 시간 기준 데이터)
        - 가까운 미래 (현재 시간 이후 가장 가까운 시간 데이터)
        - 조금 더 먼 미래 (그 다음 시간 데이터)
        각 그룹에는 다음 항목이 들어갑니다:
        - label (시간대 이름)
        - time (그 시간대의 실제 시간 문자열)
        - forecast (날씨 예보처럼 감정 상태 설명 및 요약, 수치 활용, 최소 3문장 이상)
        - warnings (감정 수치가 특이하거나 주의할 점들, 최소 1문장 이상)
        - supporting_msg (유머나 격려 멘트, 최소 1문장 이상)
    3. commentary: 전체애 대한 통합 멘트 또는 마무리 격려, 최소 3문장 이상
        
    {
    "overall_summary": "과거와 현재를 비교하며 전체적인 감정 날씨 예보를 요약",
    "time_segments": [
        {
        "label": "현재",
        "time": "2025-07-08 10:00",
        "forecast": "오늘 아침은 감정 고기압이 머무르고 있습니다~",
        "warnings": "😢 슬픔이 감지되었습니다, 위로 특보 발령",
        "supporting_msg": ""
        },
        {
        "label": "가까운 미래",
        "time": "2025-07-08 14:00",
        "forecast": "졸음과 짜증이 몰려올 것으로 예상됩니다.",
        "warnings": "😠 분노 세력 접근 중입니다. ~ ",
        "supporting_msg": ""
        },
        {
        "label": "조금 더 먼 미래",
        "time": "2025-07-08 18:00",
        "forecast": "슬픔이 정점에 도달할 가능성... 다정함이 필요해 보입니다.",
        "warnings": "😴 졸림주의보가 ~",
        "supporting_msg": ""
        }
    ],
    "commentary": "오늘 하루, 따뜻한 말 한마디로 서로의 감정 날씨를 맑게 해봐요! ☀️"
    }
    """
    response = await openai_client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}]
    )
    
    return response.choices[0].message.content.strip()